<template>
  <div class="app-container">
    <el-form :model="queryParams" ref="queryForm" :inline="true" v-show="showSearch" label-width="68px">
#foreach($column in $columns)
#if($column.query)
#set($dictType=$column.dictType)
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($column.htmlType == "input")
      <el-form-item label="${comment}" prop="entity.${column.javaField}">
        <el-input
          v-model="queryParams.entity.${column.javaField}"
          placeholder="请输入${comment}"
          clearable
          size="small"
          @keyup.enter.native="handleQuery"
        />
      </el-form-item>
#elseif(($column.htmlType == "select" || $column.htmlType == "radio") && "" != $dictType)
      <el-form-item label="${comment}" prop="entity.${column.javaField}">
        <el-select v-model="queryParams.entity.${column.javaField}" placeholder="请选择${comment}" clearable size="small">
          <el-option
            v-for="dict in ${column.javaField}Options"
            :key="dict.dictValue"
            :label="dict.dictLabel"
            :value="dict.dictValue"
          />
        </el-select>
      </el-form-item>
#elseif(($column.htmlType == "select" || $column.htmlType == "radio") && $dictType)
      <el-form-item label="${comment}" prop="entity.${column.javaField}">
        <el-select v-model="queryParams.entity.${column.javaField}" placeholder="请选择${comment}" clearable size="small">
          <el-option label="请选择字典生成" value=""/>
        </el-select>
      </el-form-item>
#elseif($column.htmlType == "datetime" && $column.queryType != "BETWEEN")
      <el-form-item label="${comment}" prop="entity.${column.javaField}">
        <el-date-picker clearable size="small"
          v-model="queryParams.entity.${column.javaField}"
          type="date"
          value-format="yyyy-MM-dd"
          placeholder="选择${comment}">
        </el-date-picker>
      </el-form-item>
#elseif($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
      <el-form-item label="${comment}">
        <el-date-picker
          v-model="daterange${AttrName}"
          size="small"
          style="width: 240px"
          value-format="yyyy-MM-dd"
          type="daterange"
          range-separator="-"
          start-placeholder="开始日期"
          end-placeholder="结束日期"
        ></el-date-picker>
      </el-form-item>
#end
#end
#end
      <el-form-item>
        <el-button type="primary" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
        <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
      </el-form-item>
    </el-form>

    <el-row :gutter="10" class="mb8">
      <el-col :span="1.5">
        <el-button
          type="primary"
          plain
          icon="el-icon-plus"
          size="mini"
          @click="handleInsert"
          v-hasPermi="['${moduleName}:${businessName}:insert']"
        >新增
        </el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="success"
          plain
          icon="el-icon-edit"
          size="mini"
          :disabled="single"
          @click="handleUpdate"
          v-hasPermi="['${moduleName}:${businessName}:update']"
        >修改
        </el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="danger"
          plain
          icon="el-icon-delete"
          size="mini"
          :disabled="multiple"
          @click="handleDelete"
          v-hasPermi="['${moduleName}:${businessName}:remove']"
        >删除
        </el-button>
      </el-col>
##      <el-col :span="1.5">
##        <el-button
##            type="warning"
##            plain
##            icon="el-icon-download"
##            size="mini"
##            :loading="exportLoading"
##            @click="handleExport"
##            v-hasPermi="['${moduleName}:${businessName}:export']"
##        >导出
##        </el-button>
##      </el-col>
      <right-toolbar :showSearch.sync="showSearch" @queryTable="getList"></right-toolbar>
    </el-row>

    <el-table v-loading="loading" :data="${businessName}List" @selection-change="handleSelectionChange">
      <el-table-column type="selection" width="55" align="center"/>
#foreach($column in $columns)
#set($javaField=$column.javaField)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($column.pk)
      <el-table-column label="${comment}" align="center" prop="${javaField}"/>
#elseif($column.list && $column.htmlType == "datetime")
      <el-table-column label="${comment}" align="center" prop="${javaField}" width="180">
        <template slot-scope="scope">
          <span>{{ parseTime(scope.row.${javaField}, '{y}-{m}-{d}') }}</span>
        </template>
      </el-table-column>
#elseif($column.list && "" != $column.dictType)
      <el-table-column label="${comment}" align="center" prop="${javaField}"
               :formatter="${javaField}Format"/>
#elseif($column.list && "" != $javaField)
      <el-table-column label="${comment}" align="center" prop="${javaField}"/>
#end
#end
      <el-table-column label="操作" align="center" class-name="small-padding fixed-width">
        <template slot-scope="scope">
          <el-button
            size="mini"
            type="text"
            icon="el-icon-edit"
            @click="handleUpdate(scope.row)"
            v-hasPermi="['${moduleName}:${businessName}:update']"
          >修改
          </el-button>
          <el-button
            size="mini"
            type="text"
            icon="el-icon-delete"
            @click="handleDelete(scope.row)"
            v-hasPermi="['${moduleName}:${businessName}:remove']"
          >删除
          </el-button>
        </template>
      </el-table-column>
    </el-table>
    <pagination
      v-show="total>0"
      :total="total"
      :page.sync="queryParams.page.current"
      :limit.sync="queryParams.page.size"
      @pagination="getList"
    />
    <${BusinessName}Editor :editorconfig="editorconfig" ref="${BusinessName}Editor" @reloadList="getList"/>
  </div>
</template>

<script>
  import ${BusinessName}Editor from "@/views/gridnt/${moduleName}/${businessName}/edit"
  import { list${BusinessName}, remove${BusinessName}, } from "@/api/gridnt/${moduleName}/${businessName}";

  export default {
    name: "${BusinessName}",
    components: {
        ${BusinessName}Editor
    },
    data() {
      return {
        // 遮罩层
        loading: true,
        // 导出遮罩层
        exportLoading: false,
        // 选中数组
        ids: [],
        editorconfig: {},
#if($table.sub)
        // 子表选中数据
        checked${subClassName}: [],
#end
        // 非单个禁用
        single: true,
        // 非多个禁用
        multiple: true,
        // 显示搜索条件
        showSearch: true,
        // 总条数
        total: 0,
        // ${functionName}表格数据
        ${businessName}List: [],
#if($table.sub)
        // ${subTable.functionName}表格数据
        ${subclassName}List: [],
#end
#foreach ($column in $columns)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if(${column.dictType} != '')
            // $comment字典
        ${column.javaField}Options: [],
#elseif($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
            // $comment时间范围
        daterange${AttrName}: [],
#end
#end
        // 查询参数
        queryParams: {
          page: {
            current: 1,
            size: 10,
          },
          entity: {
#foreach ($column in $columns)
#if($column.query)
            $column.javaField: null#if($velocityCount != $columns.size()),
#end
#end
#end
          }
        },
      };
    },
    created() {
      this.getList();
#foreach ($column in $columns)
#if(${column.dictType} != '')
      this.getDicts("${column.dictType}").then(response => {
        this.${column.javaField}Options = response.data;
        this.editorconfig.${column.javaField}Options = response.data
      });
#end
#end
    },
    methods: {
      /** 查询${functionName}列表 */
      getList() {
        this.loading = true;
#foreach ($column in $columns)
#if($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
        this.queryParams.entity.params = {};
#break
#end
#end
#foreach ($column in $columns)
#if($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
        if (null != this.daterange${AttrName} && '' != this.daterange${AttrName}) {
          this.queryParams.entity.params["begin${AttrName}"] = this.daterange${AttrName}[0];
          this.queryParams.entity.params["end${AttrName}"] = this.daterange${AttrName}[1];
        }
#end
#end
        list${BusinessName}(this.queryParams).then(response => {
          this.${businessName}List = response.data.records;
          this.total = response.data.total;
        }).finally(() => this.loading = false);
      },
#foreach ($column in $columns)
#if(${column.dictType} != '')
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
          // $comment字典翻译
      ${column.javaField}Format(row, column) {
        return this.selectDictLabel#if($column.htmlType ==
          "checkbox")s#end(this.${column.javaField}Options, row.${column.javaField});
      },
#end
#end
      /** 搜索按钮操作 */
      handleQuery() {
        this.queryParams.page.current = 1;
        this.getList();
      },
      /** 重置按钮操作 */
      resetQuery() {
#foreach ($column in $columns)
#if($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
        this.daterange${AttrName} = [];
#end
#end
        this.resetForm("queryForm");
        this.handleQuery();
      },
      // 多选框选中数据
      handleSelectionChange(selection) {
        this.ids = selection.map(item => item.${pkColumn.javaField})
        this.single = selection.length !== 1
        this.multiple = !selection.length
      },
      /** 新增按钮操作 */
      handleInsert() {
        this.$refs.${BusinessName}Editor.handleInsert()
      },
      /** 修改按钮操作 */
      handleUpdate(row) {
        const ${pkColumn.javaField} = row.${pkColumn.javaField} || this.ids
        this.$refs.${BusinessName}Editor.handleUpdate(${pkColumn.javaField})
      },
      /** 删除按钮操作 */
      handleDelete(row) {
        const ${pkColumn.javaField}s = row.${pkColumn.javaField} || this.ids;
        this.$confirm('是否确认删除当前选中的数据项?', "警告", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        }).then(function () {
          return remove${BusinessName}(${pkColumn.javaField}s);
        }).then(() => {
          this.getList();
          this.msgSuccess("删除成功");
        })
      },
## /** 导出按钮操作 */
## handleExport() {
##   const queryParams = this.queryParams;
##   this.$confirm('是否确认导出所有${functionName}数据项?', "警告", {
##     confirmButtonText: "确定",
##     cancelButtonText: "取消",
##     type: "warning"
##   }).then(() => {
##     this.exportLoading = true;
##     return export${BusinessName}(queryParams);
##   }).then(response => {
##     this.download(response.msg);
##     this.exportLoading = false;
##   })
## }
    }
  };
</script>
