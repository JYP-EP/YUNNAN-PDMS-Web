    upstream  admin.com  {
           # ip_hash; # 指定支持的调度算法
           # upstream 的负载均衡，weight 是权重，可以根据机器配置定义权重。weigth 参数表示权值，权值越高被分配到的几率越大。
           # server   admin.host1:8180 max_fails=2 fail_timeout=30s ;
           # server 192.168.8.165:9090 max_fails=2 fail_timeout=30s ;此为对外放开的端口，使用ip地址时，对应9090端口
             server ruoyiapp:8080 max_fails=2 fail_timeout=30s ;
    }
  upstream  pdms.com  {
           #ip_hash; # 指定支持的调度算法
           # upstream 的负载均衡，weight 是权重，可以根据机器配置定义权重。weigth 参数表示权值，权值越高被分配到的几率越大。
           # server   iot.host1:8280 max_fails=2 fail_timeout=30s ;
           # server 192.168.8.165:9091 max_fails=2 fail_timeout=30s ;此为对外开放的端口，使用ip地址时，对应9090端口
             server pdmsapp:8888 max_fails=2 fail_timeout=30s ;
     }
    
	upstream  minio.com  {
           #ip_hash; # 指定支持的调度算法
           # upstream 的负载均衡，weight 是权重，可以根据机器配置定义权重。weigth 参数表示权值，权值越高被分配到的几率越大。
           # server   iot.host1:8280 max_fails=2 fail_timeout=30s ;
           # server 192.168.8.165:9091 max_fails=2 fail_timeout=30s ;此为对外开放的端口，使用ip地址时，对应9090端口
           server minio:9000 max_fails=2 fail_timeout=30s ;
    }

    
    server{
        listen  81;
#       charset utf-8;
        server_name _;    #默认使用本机ip地址登录系统，可以配置为ip或者域名访问
        client_max_body_size 10M; 
	#root /data/nginx/www/static;	#配置文件下载路径

	#location  /images/ {
    #    	alias /data/hezenginx/stationpic/;
    #	}


        location ^~ /prod-api/pdms/ {
                proxy_pass http://pdms.com/;
         #       proxy_set_header Host $host:$server_port;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header    X-Real-IP        $remote_addr;#保留代理之前的真实客户端ip
                proxy_set_header    X-Forwarded-For  $proxy_add_x_forwarded_for;
                proxy_set_header    HTTP_X_FORWARDED_FOR $remote_addr;#在多级代理的情况下，记录每次代理之前的客户端真实ip
                proxy_redirect      default;#指定修改被代理服务器返回的响应头中的location头域跟refresh头域数值
        }
        location ^~ /prod-api/iotoss/ {
                proxy_pass http://minio.com/iotoss/;
               # proxy_set_header Host minio:9000;
                autoindex_exact_size off;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header    X-Real-IP        $remote_addr;#保留代理之前的真实客户端ip
                proxy_set_header    X-Forwarded-For  $proxy_add_x_forwarded_for;
                proxy_set_header    HTTP_X_FORWARDED_FOR $remote_addr;#在多级代理的情况下，记录每次代理之前的客户端真实ip
                proxy_redirect      default;#指定修改被代理服务器返回的响应头中的location头域跟refresh头域数值
        }
       

        location ^~ /prod-api/ {
                proxy_pass http://admin.com/;
          #      proxy_set_header Host $host:$server_port;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header    X-Real-IP        $remote_addr;#保留代理之前的真实客户端ip
                proxy_set_header    X-Forwarded-For  $proxy_add_x_forwarded_for;
                proxy_set_header    HTTP_X_FORWARDED_FOR $remote_addr;#在多级代理的情况下，记录每次代理之前的客户端真实ip
                proxy_redirect      default;#指定修改被代理服务器返回的响应头中的location头域跟refresh头域数值 
        }
        
   	 

        location / {
               root /data/nginx/www;
               index index.html;
                           try_files $uri $uri/ /index.html;
        }
	  
    # 配置下载
        location /download {
            root /data/nginx/www/static;
            autoindex on;
            autoindex_exact_size off;
#	    try_files $uri $uri/ /FirefoxSetup88.0.1.exe;
       
        }
  
    }

